services:
  web-books:
    build:
      context: ./book_backend
      dockerfile: Dockerfile
    command: gunicorn composites.book_api:app --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    depends_on:
      - db_books
    networks:
      - mynetwork

  web-issues:
    build:
      context: ./issue_backend
      dockerfile: Dockerfile
    command: gunicorn composites.issue_api:app --bind 0.0.0.0:8001
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    depends_on:
      - db_issues
    networks:
      - mynetwork

  db_books:
    image: postgres:13.0-alpine
    env_file:
      - .env.db
    ports:
      - 5555:5432
    networks:
      - mynetwork

  db_issues:
    image: postgres:13.0-alpine
    env_file:
      - .env.db
    ports:
      - 4444:5432
    networks:
      - mynetwork

  nginx:
    build: ./gateway
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 1337:80
    depends_on:
      - web
    networks:
      - mynetwork
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - "rabbitmq_data:/data"
    networks:
      - mynetwork
networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  rabbitmq_data: